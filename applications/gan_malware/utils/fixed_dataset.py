import numpy as np
from PIL import Image
import os


def fix_image(img: Image, output_path: str):
    img_width, img_height = img.size
    if img_width < img_height:
        ratio = int(img_height / img_width)
        box = (0, 0, img_height - img_width * ratio, img_height)
        added_img = img.crop(box)
        added_img_val = np.asarray(added_img)
        img_val = np.asarray(img)
        img_val_final = img_val
        if ratio > 1:
            for _ in range(1, ratio):
                img_val_final = np.concatenate((img_val_final, img_val), axis=1)
        img_val_final = np.concatenate((img_val_final, added_img_val), axis=1)
        merged_img = Image.fromarray(img_val_final)
        # merged_img.show()
        merged_img.save(output_path)
    else:
        img.save(output_path)
        print(f"{output_path} - {img_width}, {img_height}")


print("Only run it after get dataset once")
PATH_TO_GET_DATA = "../../data/dataset-v2/data"
folders = os.listdir(PATH_TO_GET_DATA)
print(folders)

for folder in folders:
    out_folder = f"../../data/dataset-v2/fixed-data/{folder}"
    os.makedirs(out_folder, exist_ok=True)
    files = os.listdir(f"{PATH_TO_GET_DATA}/{folder}")
    print(files)
    for file in files:
        image = Image.open(f"{PATH_TO_GET_DATA}/{folder}/{file}")
        out_path = f"{out_folder}/{file}"
        fix_image(img=image, output_path=out_path)
