import torch
import torchvision


# class ImageLoader(torch.utils.data.Dataset):
#     def __init__(self, datasets, batch_size, shuffle):
#         self.datasets = datasets
#         self.batch_size = batch_size
#         self.shuffle = shuffle
#     def __getitem__(self, index):
#         path, label = self.datasets[index]
#         img = self.loader(path, self.image_size)
#         print(img)
#         if self.transform is not None:
#             img = self.transform(img)
#
#         return img, label
#
#     def __len__(self):
#         return len(self.datasets)


def read_dataset(path, transform_info):
    dataset = torchvision.datasets.ImageFolder(root=path, transform=transform_info)

    return dataset


def load_dataset(dataset_read, batch_size, shuffle):
    data_loader = torch.utils.data.DataLoader(dataset_read, batch_size=batch_size, shuffle=shuffle)

    return data_loader
